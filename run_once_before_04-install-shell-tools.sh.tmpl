#!/bin/bash
#
# run_once_before_04-install-shell-tools.sh.tmpl
# 安裝 Shell 工具 (只在 macOS 和 Linux 執行)
#

{{- if ne .chezmoi.os "windows" }}

set -e

# Define helper functions
print_status() { echo -e "\033[0;34m[SHELL-TOOLS]\033[0m $1"; }
print_success() { echo -e "\033[0;32m[SUCCESS]\033[0m $1"; }
print_warning() { echo -e "\033[1;33m[WARNING]\033[0m $1"; }
print_error() { echo -e "\033[0;31m[ERROR]\033[0m $1"; }

# Install Zsh first
if ! command -v zsh >/dev/null 2>&1; then
    print_status "Installing Zsh..."
    {{- if eq .chezmoi.os "darwin" }}
    if command -v brew >/dev/null 2>&1; then
        brew install zsh
        print_success "Zsh installed via Homebrew"
    fi
    {{- else if eq .chezmoi.os "linux" }}
    if command -v dnf >/dev/null 2>&1; then
        sudo dnf install -y zsh
    elif command -v pacman >/dev/null 2>&1; then
        sudo pacman -S --noconfirm zsh
    elif command -v apt-get >/dev/null 2>&1; then
        sudo apt-get install -y zsh
    fi
    print_success "Zsh installed"
    {{- end }}
    
    # Set zsh as default shell
    print_status "Setting Zsh as default shell..."
    sudo chsh -s $(which zsh) $USER
    print_success "Zsh set as default shell"
else
    print_success "Zsh already installed"
fi

# Install curl if not available (needed for Oh My Zsh installation)
if ! command -v curl >/dev/null 2>&1; then
    print_status "Installing curl..."
    if command -v dnf >/dev/null 2>&1; then
        sudo dnf install -y curl
    elif command -v pacman >/dev/null 2>&1; then
        sudo pacman -S --noconfirm curl
    elif command -v apt-get >/dev/null 2>&1; then
        sudo apt-get update && sudo apt-get install -y curl
    elif command -v yum >/dev/null 2>&1; then
        sudo yum install -y curl
    else
        print_error "Could not install curl automatically. Please install it manually."
        exit 1
    fi
    print_success "curl installed"
fi

# Install Oh My Zsh
if [[ ! -d "$HOME/.oh-my-zsh" ]]; then
    print_status "Installing Oh My Zsh..."
    
    # Verify zsh is available and working
    if ! command -v zsh >/dev/null 2>&1; then
        print_error "Zsh is not available in PATH. Installation may have failed."
        exit 1
    fi
    
    # Install Oh My Zsh
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
    
    # Verify installation
    if [[ -d "$HOME/.oh-my-zsh" ]]; then
        print_success "Oh My Zsh installed"
    else
        print_error "Oh My Zsh installation failed"
        exit 1
    fi
else
    print_success "Oh My Zsh already installed"
fi

# Install git if not available (needed for plugin installation)
if ! command -v git >/dev/null 2>&1; then
    print_status "Installing git..."
    if command -v dnf >/dev/null 2>&1; then
        sudo dnf install -y git
    elif command -v pacman >/dev/null 2>&1; then
        sudo pacman -S --noconfirm git
    elif command -v apt-get >/dev/null 2>&1; then
        sudo apt-get install -y git
    elif command -v yum >/dev/null 2>&1; then
        sudo yum install -y git
    else
        print_error "Could not install git automatically. Please install it manually."
        exit 1
    fi
    print_success "git installed"
fi

# Install Powerlevel10k
if [[ ! -d "$HOME/powerlevel10k" ]]; then
    print_status "Installing Powerlevel10k..."
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
    print_success "Powerlevel10k installed"
else
    print_success "Powerlevel10k already installed"
fi

# Install Zsh plugins
ZSH_CUSTOM="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"

# zsh-autosuggestions
if [[ ! -d "$ZSH_CUSTOM/plugins/zsh-autosuggestions" ]]; then
    print_status "Installing zsh-autosuggestions..."
    git clone https://github.com/zsh-users/zsh-autosuggestions "$ZSH_CUSTOM/plugins/zsh-autosuggestions"
    print_success "zsh-autosuggestions installed"
else
    print_success "zsh-autosuggestions already installed"
fi

# zsh-syntax-highlighting
if [[ ! -d "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting" ]]; then
    print_status "Installing zsh-syntax-highlighting..."
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$ZSH_CUSTOM/plugins/zsh-syntax-highlighting"
    print_success "zsh-syntax-highlighting installed"
else
    print_success "zsh-syntax-highlighting already installed"
fi

# zsh-history-substring-search
if [[ ! -d "$ZSH_CUSTOM/plugins/zsh-history-substring-search" ]]; then
    print_status "Installing zsh-history-substring-search..."
    git clone https://github.com/zsh-users/zsh-history-substring-search "$ZSH_CUSTOM/plugins/zsh-history-substring-search"
    print_success "zsh-history-substring-search installed"
else
    print_success "zsh-history-substring-search already installed"
fi

# zsh-completions
if [[ ! -d "$ZSH_CUSTOM/plugins/zsh-completions" ]]; then
    print_status "Installing zsh-completions..."
    git clone https://github.com/zsh-users/zsh-completions "$ZSH_CUSTOM/plugins/zsh-completions"
    print_success "zsh-completions installed"
else
    print_success "zsh-completions already installed"
fi

print_success "Shell tools installation completed!"

{{- else }}

echo "Windows detected - Shell tools installation skipped (use WSL instead)"

{{- end }}