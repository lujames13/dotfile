#!/bin/bash
#
# run_once_before_01-install-package-managers.sh.tmpl
# 安裝各平台的套件管理器
#

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() { echo -e "${BLUE}[PACKAGE-MANAGERS]${NC} $1"; }
print_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
print_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }

command_exists() { command -v "$1" >/dev/null 2>&1; }

{{- if eq .chezmoi.os "darwin" }}
# macOS - Install Homebrew
if ! command_exists brew; then
    # Check if curl is available
    if ! command_exists curl; then
        print_status "curl not found. Installing curl..."
        # macOS should have curl by default, but just in case
        print_warning "curl should be available by default on macOS"
        print_warning "If curl is missing, please install it manually or update macOS"
        exit 1
    fi
    
    print_status "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    
    # Add Homebrew to PATH for Apple Silicon Macs
    if [[ -f "/opt/homebrew/bin/brew" ]]; then
        eval "$(/opt/homebrew/bin/brew shellenv)"
    elif [[ -f "/usr/local/bin/brew" ]]; then
        eval "$(/usr/local/bin/brew shellenv)"
    fi
    
    print_success "Homebrew installed"
else
    print_success "Homebrew already installed"
fi

{{- else if eq .chezmoi.os "linux" }}
# Linux - Update package managers
if command_exists apt-get; then
    print_status "Updating apt package list..."
    sudo apt-get update -y
    print_success "apt updated"
elif command_exists dnf; then
    print_status "Updating dnf package list..."
    sudo dnf check-update -y || true
    print_success "dnf updated"
elif command_exists pacman; then
    print_status "Updating pacman package list..."
    sudo pacman -Sy
    print_success "pacman updated"
elif command_exists apk; then
    print_status "Updating apk package list..."
    sudo apk update
    print_success "apk updated"
fi

{{- else if eq .chezmoi.os "windows" }}
# Windows - Check winget availability
if ! command_exists winget; then
    print_warning "winget not found. Please ensure you have Windows Package Manager installed."
    print_warning "You can install it from Microsoft Store or GitHub releases."
else
    print_success "winget is available"
fi

{{- end }}

print_success "Package managers setup completed!"